# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
  user: User!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input CreateCustomerInput {
  """Identifies the date and time when the object was created."""
  createdAt: Date
  id: ID
  name: String!
  notes: String
  photoPrimary: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date
}

input CreateFacilityInput {
  address1: String
  address2: String
  city: String
  county: String

  """Identifies the date and time when the object was created."""
  createdAt: Date
  customerId: String!
  id: ID
  license: String
  name: String!
  notes: String
  primaryContactName: String
  primaryEmail: String
  primaryPhone: String
  state: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date
  zip: String
}

input CreatePostInput {
  content: String!
  title: String!
}

type Customer {
  """Identifies the date and time when the object was created."""
  createdAt: Date!
  facilities: [Facility]
  id: ID!
  name: String!
  notes: String
  photoPrimary: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

"""Date custom scalar type"""
scalar Date

type Facility {
  address1: String
  address2: String
  city: String
  county: String

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  customerId: String!
  id: ID!
  license: String
  name: String!
  notes: String
  primaryContactName: String
  primaryEmail: String
  primaryPhone: String
  state: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
  zip: String
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  changePassword(data: ChangePasswordInput!): User!
  createCustomer(createCustomerInput: CreateCustomerInput!): Customer!
  createFacility(createFacilityInput: CreateFacilityInput!): Facility!
  createPost(data: CreatePostInput!): Post!
  login(data: LoginInput!): Auth!
  refreshToken(token: String!): Token!
  removeCustomer(removeOneCustomerInput: String!): Customer!
  removeFacility(removeOneFacilityInput: String!): Facility!
  signup(data: SignupInput!): Auth!
  updateCustomer(updateCustomerInput: UpdateCustomerInput!): Customer!
  updateFacility(updateFacilityInput: UpdateFacilityInput!): Facility!
  updateUser(data: UpdateUserInput!): User!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Post {
  author: User!
  content: String!

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  id: ID!
  published: Boolean!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type PostConnection {
  edges: [PostEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PostEdge {
  cursor: String!
  node: Post!
}

input PostOrder {
  direction: OrderDirection!
  field: PostOrderField!
}

"""Properties by which post connections can be ordered."""
enum PostOrderField {
  content
  createdAt
  id
  published
  title
  updatedAt
}

type Query {
  customer(findOneCustomerInput: String!): Customer!
  customers: [Customer!]!
  facilities: [Facility!]!
  facility(findOneFacilityInput: String!): Facility!
  hello(name: String!): String!
  helloWorld: String!
  me: User!
  post(postId: String!): Post!
  publishedPosts(after: String, before: String, first: Int, last: Int, orderBy: PostOrder, query: String, skip: Int): PostConnection!
  userPosts(userId: String!): [Post!]!
}

"""User role"""
enum Role {
  ADMIN
  USER
}

input SignupInput {
  email: String!
  firstname: String
  lastname: String
  password: String!
}

type Subscription {
  postCreated: Post!
}

type Token {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
}

input UpdateCustomerInput {
  """Identifies the date and time when the object was created."""
  createdAt: Date
  id: ID
  name: String
  notes: String
  photoPrimary: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date
}

input UpdateFacilityInput {
  address1: String
  address2: String
  city: String
  county: String

  """Identifies the date and time when the object was created."""
  createdAt: Date
  customerId: String
  id: ID
  license: String
  name: String
  notes: String
  primaryContactName: String
  primaryEmail: String
  primaryPhone: String
  state: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date
  zip: String
}

input UpdateUserInput {
  firstname: String
  lastname: String
}

type User {
  """Identifies the date and time when the object was created."""
  createdAt: Date!
  email: String!
  firstname: String
  id: ID!
  lastname: String
  posts: [Post!]!
  role: Role!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}
