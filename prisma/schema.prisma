datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  firstname String?
  lastname  String?
  posts     Post[]
  role      Role
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Customer {
  id                                         String   @id @default(cuid())
  createdAt                                  DateTime @default(now())
  updatedAt                                  DateTime @updatedAt
  name                                       String
  photoPrimary                               String?
  notes                                      String?
  facilities                                 Facility[]
}

model Facility {
  id                                         String   @id @default(cuid())
  createdAt                                  DateTime @default(now())
  updatedAt                                  DateTime @updatedAt
  name                                       String
  license                                    String?
  primaryContactName                         String?
  primaryPhone                               String?
  primaryEmail                               String?
  address1                                   String?
  address2                                   String?
  city                                       String?
  state                                      String?
  zip                                        String?
  county                                     String?
  notes                                      String?
  customer                                   Customer   @relation(fields: [customerId], references: [id])
  customerId                                 String
  orders                                     Order[]
  contacts                                   Contact[]
}

model Contact {
    id                                         String   @id @default(cuid())
    createdAt                                  DateTime @default(now())
    updatedAt                                  DateTime @updatedAt
    firstName                                  String
    lastName                                   String
    pronouns                                   String?
    primaryPhone                               String?
    secondaryPhone                             String?
    emailAddress                               String?
    notes                                      String?
    facility                                   Facility @relation(fields: [facilityId], references: [id])
    facilityId                                 String
}

model LabTest {
  id          String   @id @default(cuid())
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
  labFacilityLicenseNumber String?
  labFacilityName          String?
  sourcePackageLabel       String?
  productName              String?
  productCategoryName      String?
  testPerformedDate        DateTime?
  testPassed               Boolean?  @default(false)
  testComment              String?
  thcPercent               Float?
  cbdPercent               String?
  terpenePercent           Float?
  testBatch                String?
  harvestDate              DateTime?
  labTestExternalId        String?
  producerLicenseName      String?
  producerLicenseNumber    String?
  harvestLocation          String?
  stock                    Stock[]
  current                  Boolean   @default(false)
}

model LineItem {
  id                          String   @id @default(cuid())
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
  strain                      String
  itemType                    String
  quantity                    Float
  ppu                         Float
  stockId                     String?
  stock                       Stock?                        @relation(fields: [stockId], references: [id])
  order                       Order?                        @relation(fields: [orderId], references: [id])
  orderId                     String?
  packedStatus                Boolean                       @default(false)
}

model Order {
  id                          String   @id @default(cuid())
  createdAt                                  DateTime @default(now())
  updatedAt                                  DateTime @updatedAt
  scheduledPackDate           DateTime?
  scheduledShipDate           DateTime?
  dateDelivered               DateTime?
  status                      Status
  notes                       String?
  facility                    Facility                     @relation(fields: [facilityId], references: [id])
  facilityId                  String
  lineItems                   LineItem[]
}

model Stock {
  id           String   @id @default(cuid())
  createdAt                                  DateTime @default(now())
  updatedAt                                  DateTime @updatedAt
  strain       String
  itemType     String
  quantity     Float?
  uom          String?
  priceDefault Float?
  labTest      LabTest?   @relation(fields: [labTestId], references: [id])
  labTestId    String?
  lineItems     LineItem[]
}

enum Status {
  OPEN
  PACKED
  SHIPPED
  DELIVERED
  CLOSED
  COMPLETED
}

enum Role {
  ADMIN
  USER
}
